{
  "_args": [
    [
      {
        "raw": "tty-aware-progress@1.0.3",
        "scope": null,
        "escapedName": "tty-aware-progress",
        "name": "tty-aware-progress",
        "rawSpec": "1.0.3",
        "spec": "1.0.3",
        "type": "version"
      },
      "/home/pcj/dev/quinchuela-popotitos/node_modules/next"
    ]
  ],
  "_from": "tty-aware-progress@1.0.3",
  "_hasShrinkwrap": false,
  "_id": "tty-aware-progress@1.0.3",
  "_location": "/tty-aware-progress",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/tty-aware-progress_1.0.3_1544617113573_0.673980425637503"
  },
  "_npmUser": {
    "name": "bkniffler",
    "email": "bkniffler@me.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tty-aware-progress@1.0.3",
    "scope": null,
    "escapedName": "tty-aware-progress",
    "name": "tty-aware-progress",
    "rawSpec": "1.0.3",
    "spec": "1.0.3",
    "type": "version"
  },
  "_requiredBy": [
    "/next"
  ],
  "_resolved": "https://registry.npmjs.org/tty-aware-progress/-/tty-aware-progress-1.0.3.tgz",
  "_shasum": "93fbe86caf0d79c35f6e104e08f3a56c5069d3d6",
  "_shrinkwrap": null,
  "_spec": "tty-aware-progress@1.0.3",
  "_where": "/home/pcj/dev/quinchuela-popotitos/node_modules/next",
  "dependencies": {
    "progress": "2.0.3"
  },
  "description": "The excellent `progress` package from npm will unfortunately ignore non-TTY environments like CI (circle-ci, travis, etc). This package uses `progress`, but in case of non-TTY, the progress will be output as rolling logs.",
  "devDependencies": {
    "@types/jest": "^23.3.10",
    "@types/progress": "^2.0.1",
    "jest": "^23.6.0",
    "test-console": "^1.1.0",
    "ts-jest": "^23.10.5",
    "typescript": "^3.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+UpHmP813cD/edyM72cFAJaVwYa6arzNMoiQ4etylmL3NUpluuiUZYYwFR15oIZB05J7IPFV/HHhDbCGycLl3Q==",
    "shasum": "93fbe86caf0d79c35f6e104e08f3a56c5069d3d6",
    "tarball": "https://registry.npmjs.org/tty-aware-progress/-/tty-aware-progress-1.0.3.tgz",
    "fileCount": 10,
    "unpackedSize": 161469,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEPyaCRA9TVsSAnZWagAAuWQP/RBk8UCQ80TDqVast2sd\ne843I6d7SImFMW777bQSn9ZvfcKSy1PFBXq8MqcLRKZdoszp+mzw63dOwOte\nKT5LoWtdO1YWUUfPVWFLhvSNgSRAJrsORbhfrwvZ7aCJRkvW4vUUvV4V/kxt\nmhbnGw5IO27qycBCXWp4nD1hZuj3Qd2TXoRkSErSDFCPE2XFhIqcK08JwWvE\nL062HGmMVCmudckRboRyCS0XFwMQxWAZPHf4Q/2hebPxtEtWibryMYLKWrDr\nk/px2B9kXAlc4xwSsZhfR2z7IkRGeuwmCta+RKVQy9Ilmch6/EGki06Fcwms\npOaaLTXGQFHkEO+ugUV9756qJcNKTLm30BsPD41YKJmwBZnVnSp/sVcdDgxx\n5jUofcQHKsCvhHBao8GlRerd3zkYhd97qhD21lDBqK8z1wgaCvFSlDfr+dwi\niwmRUqtvCuSBGmJZzHZiD1I3tg/hLRXuZJOrYEvbNcaoMB0hJTV0ZY0dx+ym\ngQSPe21sp5+taLVMaSUya3V80lV81TpzhI8EBP5bN2/RYt60fpYTCJYNzN7n\nZjmWBsS5yaMx1eYM6lyW3m394wM9iFTWWTDfeplAzK7QU/MGjuuam2Oyvspm\nEZlYA+hV69Zd2Bl2KkgBS+zKjpyRuOEYVek+tk+mqnyA3A8Gs+SnIt6yckPD\nUEF8\r\n=T1TI\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "2393c552609f8ea8e37af04aa723147c667fd66c",
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "testPathIgnorePatterns": [
      "/lib/",
      "/node_modules/"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "collectCoverage": true
  },
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "bkniffler",
      "email": "bkniffler@me.com"
    }
  ],
  "name": "tty-aware-progress",
  "optionalDependencies": {},
  "readme": "# tty-aware-progress\n\nThe excellent `progress` package from npm will unfortunately ignore non-TTY environments like CI (circle-ci, travis, etc). This package uses `progress`, but in case of non-TTY, the progress will be output as rolling logs.\n\n## Install\n\n```bash\nnpm install tty-aware-progress\n# or\nyarn add tty-aware-progress\n```\n\n## Use\n\n`tty-aware-progress` will only need the total number of expected ticks like shown below. It returns a function that emits progress.\n\n```js\nimport createProgress from 'tty-aware-progress';\n\nconst progress = createProgress(100);\nfor (var i = 0; i < 100; i++) {\n  progress();\n}\n\n// OR\n\nconst progress = createProgress(100);\nfor (var i = 0; i < 10; i++) {\n  progress(10);\n}\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "compile": "tsc",
    "prepublish": "yarn compile",
    "test": "jest --env=node --colors --coverage test --verbose false --runInBand"
  },
  "version": "1.0.3"
}
