{
  "_args": [
    [
      {
        "raw": "parse-entities@^1.1.0",
        "scope": null,
        "escapedName": "parse-entities",
        "name": "parse-entities",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/pcj/dev/quinchuela-popotitos/node_modules/remark-parse"
    ]
  ],
  "_from": "parse-entities@^1.1.0",
  "_hasShrinkwrap": false,
  "_id": "parse-entities@1.2.1",
  "_location": "/parse-entities",
  "_nodeVersion": "11.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/parse-entities_1.2.1_1550962905365_0.965713662792796"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parse-entities@^1.1.0",
    "scope": null,
    "escapedName": "parse-entities",
    "name": "parse-entities",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/remark-parse"
  ],
  "_resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.2.1.tgz",
  "_shasum": "2c761ced065ba7dc68148580b5a225e4918cdd69",
  "_shrinkwrap": null,
  "_spec": "parse-entities@^1.1.0",
  "_where": "/home/pcj/dev/quinchuela-popotitos/node_modules/remark-parse",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "browser": {
    "./decode-entity.js": "./decode-entity.browser.js"
  },
  "bugs": {
    "url": "https://github.com/wooorm/parse-entities/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "character-entities": "^1.0.0",
    "character-entities-legacy": "^1.0.0",
    "character-reference-invalid": "^1.0.0",
    "is-alphanumerical": "^1.0.0",
    "is-decimal": "^1.0.0",
    "is-hexadecimal": "^1.0.0"
  },
  "description": "Parse HTML character references: fast, spec-compliant, positional information",
  "devDependencies": {
    "browserify": "^16.0.0",
    "nyc": "^11.0.0",
    "prettier": "^1.12.1",
    "remark-cli": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.2.0",
    "tape-run": "^4.0.0",
    "tinyify": "^2.4.3",
    "xo": "^0.20.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-NBWYLQm1KSoDKk7GAHyioLTvCZ5QjdH/ASBBQTD3iLiAWJXS5bg1jEWI8nIJ+vgVvsceBVBcDGRWSo0KVQBvvg==",
    "shasum": "2c761ced065ba7dc68148580b5a225e4918cdd69",
    "tarball": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.2.1.tgz",
    "fileCount": 6,
    "unpackedSize": 21294,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJccdDaCRA9TVsSAnZWagAA6JsQAIoXv+eC8sVOHdV/Nn7/\nBn8468KpQKycGZRGICy0VXEbFE5lv3ncVGzMr0mOy6MCMxSCQbkRrcMFSfRE\nUY0B+EfEFY4/C88GwODPHe+ockh7IeqPxFF/jaVXvWVaaQVECcpvecbvw4DO\nqj0XkvYaO+Qc3wU8PNuptqUJBQ0l52FB7mt+OCvy5xpX4StCnsjGeSYzt2ia\ntifos//rTbeN38Ah5AcUsqzdmkKRxeO6iLVwrQGmQZhuD30JHtLHKr8Fg3+n\nbey0qoLKYZ/dARfwXJKF68umMezpLkYqGVY71m6VaqcjiIS31EyxrBK1mtdK\nlRiq52YbWZR51toSIjMtGfV30hOA8Xgyyn/ZYP3r8VhoyInhfctYoSciiohk\nT2yTiO3YeBmuebYfuU3KlxTj4cYDKHYAFU+nB2RhE0Yc4qIwdBwMha6gKAmo\nAtXxUJ2c88/WXy/CMqiA/uPHeWPgHgwTmCWB7BGy7cZOuGtc5PYPXD55QagX\nBYDX9ycVbnEP2dapIwDJIvjUnAUhLPkQZGhhlZqyElOC6WC3UqY6I+lre2/Q\nWV+2RIFwDprkmPNe3ViL5ErVaijfekRxUieothKe5x3zDvxWHiCPEwU2cO6C\neYls8Eux9cICWbSFOoygGMnRIN6HQl32YyRud/gdmYhuiCp8Jtr6vsWYxWz+\nJh4g\r\n=Jziv\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js",
    "decode-entity.js",
    "decode-entity.browser.js"
  ],
  "gitHead": "f179281072c0f337d57a281e24f0ed89938cd42d",
  "homepage": "https://github.com/wooorm/parse-entities#readme",
  "keywords": [
    "parse",
    "html",
    "character",
    "reference",
    "entity",
    "entities"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "parse-entities",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "react-native": {
    "./decode-entity.js": "./decode-entity.js"
  },
  "readme": "# parse-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nParse HTML character references: fast, spec-compliant, positional\ninformation.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install parse-entities\n```\n\n## Usage\n\n```js\nvar decode = require('parse-entities')\n\ndecode('alpha &amp bravo')\n// => alpha & bravo\n\ndecode('charlie &copycat; delta')\n// => charlie ¬©cat; delta\n\ndecode('echo &copy; foxtrot &#8800; golf &#x1D306; hotel')\n// => echo ¬© foxtrot ‚â† golf ùåÜ hotel\n```\n\n## API\n\n## `parseEntities(value[, options])`\n\n##### `options`\n\n###### `options.additional`\n\nAdditional character to accept (`string?`, default: `''`).\nThis allows other characters, without error, when following an ampersand.\n\n###### `options.attribute`\n\nWhether to parse `value` as an attribute value (`boolean?`, default:\n`false`).\n\n###### `options.nonTerminated`\n\nWhether to allow non-terminated entities (`boolean`, default: `true`).\nFor example, `&copycat` for `¬©cat`.  This behaviour is spec-compliant but\ncan lead to unexpected results.\n\n###### `options.warning`\n\nError handler ([`Function?`][warning]).\n\n###### `options.text`\n\nText handler ([`Function?`][text]).\n\n###### `options.reference`\n\nReference handler ([`Function?`][reference]).\n\n###### `options.warningContext`\n\nContext used when invoking `warning` (`'*'`, optional).\n\n###### `options.textContext`\n\nContext used when invoking `text` (`'*'`, optional).\n\n###### `options.referenceContext`\n\nContext used when invoking `reference` (`'*'`, optional)\n\n###### `options.position`\n\nStarting `position` of `value` (`Location` or `Position`, optional).  Useful\nwhen dealing with values nested in some sort of syntax tree.  The default is:\n\n```js\n{\n  start: {line: 1, column: 1, offset: 0},\n  indent: []\n}\n```\n\n##### Returns\n\n`string` ‚Äî Decoded `value`.\n\n### `function warning(reason, position, code)`\n\nError handler.\n\n##### Context\n\n`this` refers to `warningContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `reason`\n\nHuman-readable reason for triggering a parse error (`string`).\n\n###### `position`\n\nPlace at which the parse error occurred (`Position`).\n\n###### `code`\n\nIdentifier of reason for triggering a parse error (`number`).\n\nThe following codes are used:\n\n| Code | Example            | Note                                          |\n| ---- | ------------------ | --------------------------------------------- |\n| `1`  | `foo &amp bar`     | Missing semicolon (named)                     |\n| `2`  | `foo &#123 bar`    | Missing semicolon (numeric)                   |\n| `3`  | `Foo &bar baz`     | Ampersand did not start a reference           |\n| `4`  | `Foo &#`           | Empty reference                               |\n| `5`  | `Foo &bar; baz`    | Unknown entity                                |\n| `6`  | `Foo &#128; baz`   | [Disallowed reference][invalid]               |\n| `7`  | `Foo &#xD800; baz` | Prohibited: outside permissible unicode range |\n\n### `function text(value, location)`\n\nText handler.\n\n##### Context\n\n`this` refers to `textContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nString of content (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n### `function reference(value, location, source)`\n\nCharacter reference handler.\n\n##### Context\n\n`this` refers to `referenceContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nEncoded character reference (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n###### `source`\n\nSource of character reference (`Location`).\n\n## Related\n\n*   [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n    ‚Äî Encode HTML character references\n*   [`character-entities`](https://github.com/wooorm/character-entities)\n    ‚Äî Info on character entities\n*   [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n    ‚Äî Info on HTML4 character entities\n*   [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n    ‚Äî Info on legacy character entities\n*   [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n    ‚Äî Info on invalid numeric character references\n\n## License\n\n[MIT][license] ¬© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/parse-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/parse-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/parse-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: http://wooorm.com\n\n[warning]: #function-warningreason-position-code\n\n[text]: #function-textvalue-location\n\n[reference]: #function-referencevalue-location-source\n\n[invalid]: https://github.com/wooorm/character-reference-invalid\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/parse-entities.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify . -s parseEntities > parse-entities.js",
    "build-mangle": "browserify . -s parseEntities -p tinyify > parse-entities.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage && npm run test-browser",
    "test-api": "node test",
    "test-browser": "browserify test.js | tape-run",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "1.2.1",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "unicorn/number-literal-case": "off",
      "object-shorthand": "off",
      "no-var": "off",
      "prefer-arrow-callback": "off",
      "guard-for-in": "off",
      "no-negated-condition": "off",
      "max-depth": "off",
      "complexity": "off"
    },
    "ignores": [
      "parse-entities.js"
    ]
  }
}
